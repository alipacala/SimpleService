name: CI/CD - Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Docker
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"

      - name: Build de la imagen Docker
        run: docker build -t alipacala/simpleservice:latest .

      - name: Login en Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "alipacala" --password-stdin

      - name: Publicar en Docker Hub
        run: docker push alipacala/simpleservice:latest

  publish-nuget:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build Contracts Library
        run: dotnet build SimpleService.Contracts/SimpleService.Contracts.csproj -c Release

      - name: Set version from Git tag
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.${{ github.run_number }}")
          echo "Version: $VERSION"
          sed -i "s|<Version>.*</Version>|<Version>$VERSION</Version>|g" SimpleService.Contracts/SimpleService.Contracts.csproj
        continue-on-error: true

      - name: Build and Pack NuGet package
        run: dotnet pack SimpleService.Contracts/SimpleService.Contracts.csproj -c Release -o out

      - name: Publish NuGet package
        run: dotnet nuget push out/*.nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  publish-to-npm:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Restaurar dependencias
        run: dotnet restore SimpleService.Application/SimpleService.Application.csproj

      - name: Construir aplicación
        run: dotnet build SimpleService.Application/SimpleService.Application.csproj -c Release

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"

      - name: Instalar dependencias
        run: npm install
        working-directory: SimpleService.Application/generated-ts-types

      - name: Construir paquete TypeScript
        run: npm run build
        working-directory: SimpleService.Application/generated-ts-types

      - name: Configurar Git para commit automático
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/alipacala/SimpleService.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Incrementar versión automáticamente
        run: npm version patch -m "Bump version to %s [skip ci]"
        working-directory: SimpleService.Application/generated-ts-types

      - name: Push de la nueva versión
        run: git push --follow-tags
        working-directory: SimpleService.Application/generated-ts-types
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publicar en npm
        run: npm publish --access public
        working-directory: SimpleService.Application/generated-ts-types
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}